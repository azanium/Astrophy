//
//  TVGuideViewController.swift
//  Astro
//
//  Created by Suhendra Ahmad on 9/20/17.
//  Copyright (c) 2017 Ainasoft. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ALThreeCircleSpinner
import XLActionController
import RxSwift
import RxCocoa
import Kingfisher

protocol TVGuideDisplayLogic: class
{
    
}

class TVGuideViewController: UIViewController, TVGuideDisplayLogic
{
    var interactor: TVGuideBusinessLogic?
    var router: (NSObjectProtocol & TVGuideRoutingLogic & TVGuideDataPassing)?
    
    fileprivate let kCellIdentifier = "TVGuideCell"
    
    var tableView: UITableView!
    let spinner = ALThreeCircleSpinner(frame: CGRect(x: 0, y: 0, width: 44, height: 44))
    
    var displayedMetas = Variable([ChannelMeta]())
    
    let disposeBag = DisposeBag()
    private var sortChannelNumberAscending = true
    private var sortChannelNameAscending = true
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = TVGuideInteractor()
        let presenter = TVGuidePresenter()
        let router = TVGuideRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupUI() {
        
        self.decorateNavigationBar()
        
        // We used hardcoded UI, because Xcode 8.3.3 has bug with top layout constraint on interface builder
        tableView = UITableView()
        self.view.addSubview(tableView)
        tableView.snp.remakeConstraints { (make) in
            make.edges.equalToSuperview()
        }
        tableView.rx.setDelegate(self).disposed(by: disposeBag)
        
        tableView.backgroundColor = UIColor.black
        tableView.separatorStyle = .none
        tableView.rowHeight = 40
        tableView.tableHeaderView = UIView(frame: CGRect.zero)
        tableView.tableFooterView = UIView(frame: CGRect.zero)
        tableView.register(TVGuideCell.self, forCellReuseIdentifier: kCellIdentifier)
        
        setupSpinner()
    }
    
    func setupSpinner() {
        self.view.addSubview(spinner)
        spinner.snp.remakeConstraints { (make) in
            make.centerX.equalToSuperview()
            make.centerY.equalToSuperview()
            make.width.equalTo(44)
            make.height.equalTo(44)
        }
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        setupUI()
        
        setupTableRowBindings()
        
        loadChannels()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func loadChannels()
    {
        let request = TVGuide.Something.Request()
        interactor?.doSomething(request: request)
        
        // prepare dummy
        var metas = [ChannelMeta]()
        let meta1 = ChannelMeta()
        let meta2 = ChannelMeta()
        meta1.channelTitle = "Astro China"
        meta2.channelTitle = "Astro Wah Lai Toi"
        metas += [meta1]
        metas += [meta2]
        
        displayedMetas.value = metas
    }
    
    
}

extension TVGuideViewController : UITableViewDelegate {
    
    fileprivate func setupTableRowBindings() {
        
        // Bind out displayed channels to the tableview
        displayedMetas.asObservable()
            .bind(to: tableView
                .rx
                .items(cellIdentifier: kCellIdentifier, cellType: TVGuideCell.self)
            ) { (index, meta, cell) in
                
                cell.channelTitleLabel.text = meta.channelTitle
                
                if meta.defaultLogo != "" {
                    let imageUrl = URL(string: meta.defaultLogo)!
                    cell.logoImageView.kf.indicatorType = .activity
                    cell.logoImageView.kf.setImage(with: ImageResource(downloadURL: imageUrl, cacheKey: imageUrl.path))
                }
            }
            .disposed(by: disposeBag)
        
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        return SeekerView(frame: CGRect.zero)
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 100
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 150
    }
}
